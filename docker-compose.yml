version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://bankruptcy_user:bankruptcy_password@db:5432/bankruptcy_scoring
      - DATABASE_URL_SYNC=postgresql://bankruptcy_user:bankruptcy_password@db:5432/bankruptcy_scoring
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=True
    volumes:
      - ./data:/app/data
      - ./app/templates:/app/app/templates
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - bankruptcy_network

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=bankruptcy_scoring
      - POSTGRES_USER=bankruptcy_user
      - POSTGRES_PASSWORD=bankruptcy_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - bankruptcy_network

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - bankruptcy_network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./data/output:/var/www/files
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - bankruptcy_network

volumes:
  postgres_data:
  redis_data:

networks:
  bankruptcy_network:
    driver: bridge